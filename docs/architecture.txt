- shared memory MP
- kernel object tree
    - object types:
        - directory (contains objects)
        - file (open file handle, has ref to FS)
        - filesystem (mounted file system on a device)
        - device (any connected device, may be open or closed)
        - socket (open socket)
        - symlink (link to other object)
        - futex (synchronization)
        - semaphore (synchronization)
        - section (memory-mapped file data)
        - process
        - thread
        - security principal
    - objects *may* optionally expose a function for locating sub-objects. used to implement directory and symlink
    - a file on disk may transparently be a mounted filesystem containing on disk a ULID to identify the filesystem
- absolutely using TPR as an IRQL type thing
- usermode kernel services dynamic library always loaded
- binary logging ala journald
- threads are first-class objects and may be supervisor or user threads
    - supervisor threads run in supervisor mode and are created by and used for background kernel functions
    - user threads are created, owned, and used by user-mode processes
    - each thread has a desired privelage level and its own page mappings, much of which overlaps with process and
        kernel memory mappings
    - threads may register waits on kernel objects, eg for IO operations or synchronization
    - threads may be suspended or resumed by other threads
- processes always have at least one thread